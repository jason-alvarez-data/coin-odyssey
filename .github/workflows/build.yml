name: Build Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            build_command: build:win
            artifact_path: |
              dist/*.exe
              dist/latest.yml
            artifact_name: windows-build
          - os: macos-latest
            build_command: build:mac
            artifact_path: |
              dist/*.dmg
              dist/latest-mac.yml
            artifact_name: macos-build
          - os: ubuntu-latest
            build_command: build:linux
            artifact_path: |
              dist/*.AppImage
              dist/latest-linux.yml
            artifact_name: linux-build

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev python3-pip

      - name: Install dependencies
        run: |
          npm ci
          npm run rebuild
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize database template
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            npm run init-db
            if [ ! -f "template.db" ]; then
              echo "Error: template.db was not created on Windows"
              exit 1
            fi
          else
            npm run init-db
            if [ ! -f "template.db" ]; then
              echo "Error: template.db was not created on Unix"
              exit 1
            fi
          fi
        shell: bash
        env:
          RUNNER_OS: ${{ runner.os }}

      - name: Verify template.db
        run: |
          if [ ! -f "template.db" ]; then
            echo "Error: template.db not found"
            ls -la
            pwd
            exit 1
          fi
          echo "template.db exists and is ready for packaging"
          ls -la template.db
        shell: bash

      - name: Build application
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run ${{ matrix.build_command }}

      - name: List dist directory
        run: |
          ls -la dist/
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
          if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-build/*.exe
            windows-build/latest.yml
            macos-build/*.dmg
            macos-build/latest-mac.yml
            linux-build/*.AppImage
            linux-build/latest-linux.yml
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 